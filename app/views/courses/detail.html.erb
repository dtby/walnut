<div class="courses__details courses__show">
<div class="container">
	<%=render partial: "courses_intro"%>
	<div class="wrapper detail">
		<h3>课程概述</h3>
		<p>对于这个地球上大多数人来说，真正的数字化革命还没有开始。在接下来的10年里，变化将无处不在，让我们一起来给这个世界编码吧！——Eric Schmidt Google执行主席</p>
		<p>编程语言层出不穷，不胜枚举，能帮助我们以不变应万变的奥秘何在？答案就是“编程之魂”。传统的编程入门课，都是以教授一种语言的基本语法为主，试图通过语言来传达“编程之魂”，但这样也许你会将更多的精力用在理解语言的语法细节上，只见树木不见森林。</p>
		<p>    期望通过本课程的学习，你不只是简单地能够掌握一种语言的语法，还能理解隐含在语法背后的思想，并初步具备灵活使用这些思想进行编写程序解决实际问题的能力。如果你掌握了这些，你会发现，迈向成功的最后一步不过是选择一种合适的编程工具而已</p>
		<p>我们会用15周的时间来深入讲解C语言，在授课过程中，我们会注重多解释一些“为什么”以及错误程序的分析，从环环相扣的问题入手，将一些易被忽视且对高水平程序设计很重要的“点”，沿着数据结构从简单到复杂的主线逐一展开，在实例的“不断深化和提升”中引出知识点，通过对问题的举一反三和前后知识点的融会贯通，由浅入深地引导你循序渐进地编写规模逐步增大的程序。  </p>
		<p> 程序设计语言数以千计，能广为流传的不过几十种，能风光三十年的更是屈指可数，其中影响最大、寿命最长的非C语言莫属。尽管Java等后起之秀呈后来居上之势，但C语言宝刀不老，仍然笑傲天下，论剑江湖，铁杆粉丝遍布世界各地。</p>
		<p> 你想加入“稀饭”的行列吗？你想从“菜鸟”升级为“程序猿”吗？那就加入我们，和我们一起踏上爱上C语言之旅吧。</p>
		<h3>授课大纲</h3>
		<p>本门课程的基本内容是面向零基础的学生。进阶内容是面向有一定编程基础或者有大学计算机基础的学生，但是进阶内容不做为课程的考试内容。12个知识单元：C数据类型，C算术运算和赋值运算，数据的键盘输入和屏幕输出，分支控制，循环控制，函数，数组，指针，指针与数组，结构体和共用体，动态数据结构的C语言实现，文件操作。</p>
		<p>第1章 C数据类型<br>第2章 C算术运算和赋值运算<br>第3章 数据的键盘输入和屏幕输出<br>第4章 分支控制<br>第5章 循环控制<br>第6章 函数-1<br>第6章 函数-2<br>第7章 数组<br>第8章 指针-1<br>第8章 指针-2<br>第9章 指针与数组<br>第10章 结构体和共用体<br>第11章  动态数据结构的C语言实现-1<br>第11章  动态数据结构的C语言实现-2<br>第12章  文件操作</p>
		<h3>常见问题</h3>
		<p>Q：本门课程面向的授课群体是什么？没有任何基础能学习本课程吗？
		A：本门课程的基本内容是面向零基础的学生。进阶内容是面向有一定编程基础或者大学计算机基础的学生，但是进阶内容不做为课程考试内容。</p>
		<p>A：在授课过程中，我们会注重解释“为什么”，揭示知识点背后的原理和思想，适时引入错误程序的分析、测试与调试，将一些易被忽视且对高水平程序设计很重要的“点”逐一展现给你，沿着数据结构从简单到复杂的主线展开，将软件工程相关的思想和方法渗透其中，从紧密结合实际的问题出发，在一个实例的“不断深化和提升”中逐步引出相关知识点，通过对问题的举一反三和前后知识点的融会贯通，由浅入深地启发引导你循序渐进地编程，让你在不知不觉中逐步加深对程序设计方法的了解和掌握。期望通过这样的设计，你在学完以后，不只是简单地掌握了C语言的语法，还能够理解隐藏在语法背后的思想，并初步具备灵活使用这些思想进行编程的能力。</p>
		<p>Q：如何学好程序设计？ 
		A：“熟读唐诗三百首，不会吟诗也会诌”，编程也是如此。写出的漂亮程序不是听课听出来的，也不是看书看出来的，而是读别人的程序读出来的，更是自己动手练出来的。学习编程一定要多读多写多练啊，除此以外是没有捷径可走的。</p>
	</div>
</div>
</div>